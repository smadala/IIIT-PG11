#include<iostream>
#include<vector>
#include<string>
#include<stdlib.h>
using namespace::std;
void skipSpace(char *temp){
                while(*temp == ' ' ||
                                *temp == '\t'||
                                *temp == '\n'){
                        *temp ='\0';
                        temp++;
		}
}
void pa(string cmd){
	vector<string> all;
	vecot<char**> final;
	int end,start=0;
	while(1){
		end=cmd.find('|', start);
		if(end==string::npos) { /*cout<< cmd.substr(start, string::npos)<< endl*/
			all.push_back(cmd.substr(start, string::npos));
			break;
		}
                //cout<< cmd.substr(start,end-start)<<endl;
		all.push_back(cmd.substr(start,end-start));
		start=end+1;
	}
	for(unsigned int i=0;i<all.size();i++){
		cout<<all[i]<<endl;

	}

}
/*void parsecmd(string cmd, char*** argv){
        char *temp;
        temp=(char*)malloc((cmd.length()+1)*sizeof(char*));
        cmd.copy(temp,cmd.length(),0);


        argv=(char***)malloc(10*sizeof(char**));

        for(int i=0;i<10;i++){
                argv[i]=(char**)malloc(10*sizeof(char*));
		for(int j=0;j<10;j++){
			argv[i][j]=(char *)malloc(50*sizeof(char));
		}
        }

        int i=0;
        while(*temp){
		skipSpace(temp);
		if(*temp == '|'){
			*temp='\0';
			*argv[i]=NULL;
			i=0;
			while(*argv[i] != NULL)
				cout<<*argv[i++]<<endl;
			argv++;
			i=0;
			temp++;
			skipSpace(temp);
		}
                *argv[i++]=temp;
                while(*temp != '\0' &&
                                *temp != '\t' &&
                                *temp != '\n' &&
                                *temp != ' '&&
				*temp != '|')
                        temp++;
        }
        argv[i]=NULL;
}*/
int main(){
	char ***a;
	//parsecmd("ls -l .. | wc -l -a | wc -lm",a);
	pa("ls -l .. | wc -l -a | wc -lm");
}
